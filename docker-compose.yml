version: '3.8'

services:
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - app-network
    restart: always

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: backend
    ports:
      - "5000:5000"
    volumes:
      - ./server/logs:/app/logs
    environment:
      - PORT=5000
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-portfolio}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost}
      - JWT_SECRET=pK8tQ7zX3vB2nM5cR9fE6hJ1yG4dL0sA
      - CLOUDINARY_CLOUD_NAME=dn4rfjyva
      - CLOUDINARY_API_KEY=831168514959354
      - CLOUDINARY_API_SECRET=YDGKTUI983-FGVSFQ6EAKZQDK
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_SECURE=${EMAIL_SECURE:-false}
      - EMAIL_USER=examyou076@gmail.com
      - EMAIL_PASS=fahx rdrh xcur wbul
    depends_on:
      - postgres
    networks:
      - app-network
    restart: always

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-portfolio}
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
